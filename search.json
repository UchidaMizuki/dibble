[{"path":"https://uchidamizuki.github.io/dibble/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Uchida Mizuki Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://uchidamizuki.github.io/dibble/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mizuki Uchida. Author, maintainer.","code":""},{"path":"https://uchidamizuki.github.io/dibble/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Uchida M (2022). dibble: Dimensional Data Frames. https://github.com/UchidaMizuki/dibble, https://uchidamizuki.github.io/dibble/.","code":"@Manual{,   title = {dibble: Dimensional Data Frames},   author = {Mizuki Uchida},   year = {2022},   note = {https://github.com/UchidaMizuki/dibble, https://uchidamizuki.github.io/dibble/}, }"},{"path":"https://uchidamizuki.github.io/dibble/index.html","id":"dibble","dir":"","previous_headings":"","what":"Dimensional Data Frames","title":"Dimensional Data Frames","text":"‘dibble’ (derived ‘dimensional tibble’) data frame consisting arrays dimension names, known data cubes. columns dibbles classified dimensions measures, operations measures broadcasted dimension names.","code":""},{"path":"https://uchidamizuki.github.io/dibble/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Dimensional Data Frames","text":"","code":"# the released version from CRAN: install.packages(\"dibble\")  # the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"UchidaMizuki/dibble\")"},{"path":"https://uchidamizuki.github.io/dibble/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Dimensional Data Frames","text":"","code":"library(dibble) library(dplyr) library(tidyr)"},{"path":"https://uchidamizuki.github.io/dibble/index.html","id":"broadcasting","dir":"","previous_headings":"Examples","what":"Broadcasting","title":"Dimensional Data Frames","text":"","code":"arr1 <- array(1:6, c(2, 3),               list(axis1 = letters[1:2],                    axis2 = letters[1:3])) arr2 <- array(1:2, 2,               list(axis2 = letters[1:2]))  try(arr1 * arr2) #> Error in arr1 * arr2 : non-conformable arrays  ddf1 <- as_dibble(arr1) ddf2 <- as_dibble(arr2)  ddf1 * ddf2 #> Warning: Broadcasting, #> New axes, dim_names = c(\"axis1\", \"axis2\") #> New coordinates,  #>  $ axis2: chr \"c\" #> # A dibble:   6 #> # Dimensions: axis1 [2], axis2 [3] #>   axis1 axis2     . #>   <chr> <chr> <int> #> 1 a     a         1 #> 2 a     b         6 #> 3 a     c        NA #> 4 b     a         2 #> 5 b     b         8 #> 6 b     c        NA  # You can use broadcast() to suppress the warnings. broadcast(ddf1 * ddf2,           dim_names = c(\"axis1\", \"axis2\")) #> # A dibble:   6 #> # Dimensions: axis1 [2], axis2 [3] #>   axis1 axis2     . #>   <chr> <chr> <int> #> 1 a     a         1 #> 2 a     b         6 #> 3 a     c        NA #> 4 b     a         2 #> 5 b     b         8 #> 6 b     c        NA"},{"path":"https://uchidamizuki.github.io/dibble/index.html","id":"dplyr-methods","dir":"","previous_headings":"Examples","what":"dplyr methods","title":"Dimensional Data Frames","text":"dibble provides dplyr methods follows, as_tibble(): tibble package filter() mutate(): Experimental rename() select() relocate() slice(): Specify locations (integer vector) dimension","code":""},{"path":[]},{"path":"https://uchidamizuki.github.io/dibble/index.html","id":"from-a-dataframe","dir":"","previous_headings":"Examples > How to build a dibble","what":"From a data.frame","title":"Dimensional Data Frames","text":"","code":"df <- expand_grid(axis1 = letters[1:2],                   axis2 = letters[1:2]) %>%    mutate(value1 = row_number(),          value2 = value1 * 2)  ddf <- df %>%    dibble_by(axis1, axis2)  df #> # A tibble: 4 x 4 #>   axis1 axis2 value1 value2 #>   <chr> <chr>  <int>  <dbl> #> 1 a     a          1      2 #> 2 a     b          2      4 #> 3 b     a          3      6 #> 4 b     b          4      8 ddf #> # A dibble:   4 x 2 #> # Dimensions: axis1 [2], axis2 [2] #> # Measures:   value1, value2 #>   axis1 axis2 value1 value2 #>   <chr> <chr>  <int>  <dbl> #> 1 a     a          1      2 #> 2 a     b          2      4 #> 3 b     a          3      6 #> 4 b     b          4      8  # You can access the measures from the dibble with `$`. ddf$value1 #> # A dibble:   4 #> # Dimensions: axis1 [2], axis2 [2] #>   axis1 axis2     . #>   <chr> <chr> <int> #> 1 a     a         1 #> 2 a     b         2 #> 3 b     a         3 #> 4 b     b         4"},{"path":"https://uchidamizuki.github.io/dibble/index.html","id":"from-an-array-with-dimension-names-or-a-vector","dir":"","previous_headings":"Examples > How to build a dibble","what":"From an array with dimension names or a vector","title":"Dimensional Data Frames","text":"dibble provides dplyr methods follows,","code":"# from an array with dimension names arr <- array(1:4, c(2, 2),              list(axis1 = letters[1:2],                   axis2 = letters[1:2]))  ddf1 <- as_dibble(arr)  # from a vector ddf2 <- broadcast(1:4,                   list(axis1 = letters[1:2],                        axis2 = letters[1:2]))  arr #>      axis2 #> axis1 a b #>     a 1 3 #>     b 2 4 ddf1 #> # A dibble:   4 #> # Dimensions: axis1 [2], axis2 [2] #>   axis1 axis2     . #>   <chr> <chr> <int> #> 1 a     a         1 #> 2 a     b         3 #> 3 b     a         2 #> 4 b     b         4 ddf2 #> # A dibble:   4 #> # Dimensions: axis1 [2], axis2 [2] #>   axis1 axis2     . #>   <chr> <chr> <int> #> 1 a     a         1 #> 2 a     b         3 #> 3 b     a         2 #> 4 b     b         4"},{"path":"https://uchidamizuki.github.io/dibble/reference/apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply functions over array margins — apply","title":"Apply functions over array margins — apply","text":"Applying function margins dibble array, including matrix.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/apply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply functions over array margins — apply","text":"","code":"apply(X, MARGIN, FUN, ...)  # S3 method for default apply(X, MARGIN, FUN, ..., simplify = TRUE)  # S3 method for tbl_ddf apply(X, MARGIN, FUN, ...)  # S3 method for ddf_col apply(X, MARGIN, FUN, ...)"},{"path":"https://uchidamizuki.github.io/dibble/reference/apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply functions over array margins — apply","text":"X dibble array, including matrix. MARGIN integer character vector giving subscripts function applied . FUN function applied. ... Optional arguments FUN. simplify logical indicating whether results simplified possible.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply functions over array margins — apply","text":"dibble X dibble. See base::apply() return value default method.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply functions over array margins — apply","text":"apply() overrides base::apply() make generic. default method calls base version.","code":""},{"path":[]},{"path":"https://uchidamizuki.github.io/dibble/reference/apply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply functions over array margins — apply","text":"","code":"x <- array(1:24, 2:4,            list(axis1 = letters[1:2],                 axis2 = letters[1:3],                 axis3 = letters[1:4]))  apply(x, 2:3, sum) #>      axis3 #> axis2  a  b  c  d #>     a  3 15 27 39 #>     b  7 19 31 43 #>     c 11 23 35 47 apply(as_dibble(x), 2:3, sum) #> # A dibble:   12 #> # Dimensions: axis2 [3], axis3 [4] #>    axis2 axis3     . #>    <chr> <chr> <int> #>  1 a     a         3 #>  2 a     b        15 #>  3 a     c        27 #>  4 a     d        39 #>  5 b     a         7 #>  6 b     b        19 #>  7 b     c        31 #>  8 b     d        43 #>  9 c     a        11 #> 10 c     b        23 #> 11 c     c        35 #> 12 c     d        47  apply(x, c(\"axis2\", \"axis3\"), sum) #>      axis3 #> axis2  a  b  c  d #>     a  3 15 27 39 #>     b  7 19 31 43 #>     c 11 23 35 47 apply(as_dibble(x), c(\"axis2\", \"axis3\"), sum) #> # A dibble:   12 #> # Dimensions: axis2 [3], axis3 [4] #>    axis2 axis3     . #>    <chr> <chr> <int> #>  1 a     a         3 #>  2 a     b        15 #>  3 a     c        27 #>  4 a     d        39 #>  5 b     a         7 #>  6 b     b        19 #>  7 b     c        31 #>  8 b     d        43 #>  9 c     a        11 #> 10 c     b        23 #> 11 c     c        35 #> 12 c     d        47"},{"path":"https://uchidamizuki.github.io/dibble/reference/as_dibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object to a dibble — as_dibble","title":"Coerce an object to a dibble — as_dibble","text":"as_dibble() turns object dimensional data frame called dibble.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/as_dibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object to a dibble — as_dibble","text":"","code":"as_dibble(x, ...)  # S3 method for default as_dibble(x, ...)  # S3 method for rowwise_df as_dibble(x, ...)  # S3 method for grouped_df as_dibble(x, ...)  # S3 method for ddf_col as_dibble(x, ...)  # S3 method for tbl_ddf as_dibble(x, ...)"},{"path":"https://uchidamizuki.github.io/dibble/reference/as_dibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object to a dibble — as_dibble","text":"x object. ... Unused, extensibility.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/as_dibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object to a dibble — as_dibble","text":"dibble.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/basic-matrices-arrays.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic matrices and arrays — basic-matrices-arrays","title":"Basic matrices and arrays — basic-matrices-arrays","text":"Create basic matrices arrays.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/basic-matrices-arrays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic matrices and arrays — basic-matrices-arrays","text":"","code":"eye(x, ...)  # S3 method for default eye(x, y = x, ...)  # S3 method for matrix eye(x, ...)  # S3 method for ddf_col eye(x, ...)  # S3 method for tbl_ddf eye(x, ...)  ones(x, ...)  # S3 method for default ones(x, y = x, ...)  # S3 method for array ones(x, ...)  # S3 method for ddf_col ones(x, ...)  # S3 method for tbl_ddf ones(x, ...)  zeros(x, ...)  # S3 method for default zeros(x, y = x, ...)  # S3 method for array zeros(x, ...)  # S3 method for ddf_col zeros(x, ...)  # S3 method for tbl_ddf zeros(x, ...)"},{"path":"https://uchidamizuki.github.io/dibble/reference/basic-matrices-arrays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic matrices and arrays — basic-matrices-arrays","text":"x object. ... arguments passed methods. y scalar integer.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/basic-matrices-arrays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic matrices and arrays — basic-matrices-arrays","text":"dibble x dibble. Otherwise, returns matrix array.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/basic-matrices-arrays.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic matrices and arrays — basic-matrices-arrays","text":"functions override base functions make generic. default methods call base versions.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/broadcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Broadcast to a new dimension — broadcast","title":"Broadcast to a new dimension — broadcast","text":"Broadcasts dimension object new dimension.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/broadcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Broadcast to a new dimension — broadcast","text":"","code":"broadcast(x, dim_names = NULL, ...)  # S3 method for default broadcast(x, dim_names = NULL, ...)  # S3 method for ddf_col broadcast(x, dim_names, ...)  # S3 method for tbl_ddf broadcast(x, dim_names, ...)"},{"path":"https://uchidamizuki.github.io/dibble/reference/broadcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Broadcast to a new dimension — broadcast","text":"x dibble, vector, array. dim_names character vector list dimension names. ... Unused, extensibility.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/broadcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Broadcast to a new dimension — broadcast","text":"dibble.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/broadcast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Broadcast to a new dimension — broadcast","text":"Operations dibbles automatically broadcasted, safety reasons, warnings issued. broadcast() can suppress warnings dim_names matches dimension x.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/broadcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Broadcast to a new dimension — broadcast","text":"","code":"x <- broadcast(1:2,                list(axis1 = letters[1:2])) y <- broadcast(1:3,                list(axis2 = letters[1:3])) broadcast(x * y, c(\"axis1\", \"axis2\")) #> # A dibble:   6 #> # Dimensions: axis1 [2], axis2 [3] #>   axis1 axis2     . #>   <chr> <chr> <int> #> 1 a     a         1 #> 2 a     b         2 #> 3 a     c         3 #> 4 b     a         2 #> 5 b     b         4 #> 6 b     c         6"},{"path":"https://uchidamizuki.github.io/dibble/reference/diag.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix diagonals — diag","title":"Matrix diagonals — diag","text":"Extract replace diagonal matrix, construct diagonal matrix.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix diagonals — diag","text":"","code":"diag(x, ...)  # S3 method for default diag(x = 1, nrow, ncol, names, ...)  # S3 method for tbl_ddf diag(x, axes, ...)  # S3 method for ddf_col diag(x, axes, ...)  diag(x, ...) <- value  # S3 method for default diag(x, ...) <- value  # S3 method for tbl_ddf diag(x, ...) <- value  # S3 method for ddf_col diag(x, ...) <- value"},{"path":"https://uchidamizuki.github.io/dibble/reference/diag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix diagonals — diag","text":"x dibble, matrix, vector 1D array, missing. ... Unused, extensibility. nrow, ncol Optional dimensions result x matrix. names (x matrix) logical indicating resulting vector, diagonal x, inherit names dimnames(x) available. axes character vector axes. value Replacement values.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/diag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix diagonals — diag","text":"dibble x dibble. See base::diag() return values default methods.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/diag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matrix diagonals — diag","text":"functions override base functions make generic. default methods call base versions.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/dibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a dimensional data frame — dibble","title":"Build a dimensional data frame — dibble","text":"dibble() constructs dimensional data frame called dibble.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/dibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a dimensional data frame — dibble","text":"","code":"dibble(..., .dim_names = NULL)"},{"path":"https://uchidamizuki.github.io/dibble/reference/dibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a dimensional data frame — dibble","text":"... set name-measure pairs. .dim_names list dimension names.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/dibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a dimensional data frame — dibble","text":"dibble.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/dibble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a dimensional data frame — dibble","text":"Manipulation functions: mutate() rename() select() & relocate() slice()","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/dibble_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a dibble by one or more variables — dibble_by","title":"Constructs a dibble by one or more variables — dibble_by","text":"dibble_by() constructs dibble one variables.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/dibble_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a dibble by one or more variables — dibble_by","text":"","code":"dibble_by(x, ..., .names_sep = NULL)"},{"path":"https://uchidamizuki.github.io/dibble/reference/dibble_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a dibble by one or more variables — dibble_by","text":"x data frame dibble. ... Variables. .names_sep Passed tidyr::pack().","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/dibble_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a dibble by one or more variables — dibble_by","text":"dibble.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/extremes.html","id":null,"dir":"Reference","previous_headings":"","what":"Maxima and Minima — extremes","title":"Maxima and Minima — extremes","text":"Returns parallel maxima minima input values.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/extremes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maxima and Minima — extremes","text":"","code":"pmax(..., na.rm = FALSE)  # S3 method for default pmax(..., na.rm = FALSE)  # S3 method for ddf_col pmax(..., na.rm = FALSE)  # S3 method for tbl_ddf pmax(..., na.rm = FALSE)  pmin(..., na.rm = FALSE)  # S3 method for default pmin(..., na.rm = FALSE)  # S3 method for ddf_col pmin(..., na.rm = FALSE)  # S3 method for tbl_ddf pmin(..., na.rm = FALSE)"},{"path":"https://uchidamizuki.github.io/dibble/reference/extremes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maxima and Minima — extremes","text":"... Dibbles, numeric character arguments. na.rm logical indicating whether missing values removed.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/extremes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maxima and Minima — extremes","text":"dibble ... dibbles. See base::pmax() base::pmin()return value default method.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/extremes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maxima and Minima — extremes","text":"functions override base functions make generic. default methods call base versions.","code":""},{"path":[]},{"path":"https://uchidamizuki.github.io/dibble/reference/grapes-times-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix Multiplication — %*%","title":"Matrix Multiplication — %*%","text":"Multiplies two matrices, conformable.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/grapes-times-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix Multiplication — %*%","text":"","code":"x %*% y"},{"path":"https://uchidamizuki.github.io/dibble/reference/grapes-times-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix Multiplication — %*%","text":"x Numeric complex dibble, matrices vectors. y Numeric complex dibble, matrices vectors.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/grapes-times-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix Multiplication — %*%","text":"dibble x dibble. See base::%*% return value default method.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/grapes-times-grapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matrix Multiplication — %*%","text":"%*% overrides base::%*% make generic. default method calls base version.","code":""},{"path":[]},{"path":"https://uchidamizuki.github.io/dibble/reference/ifelse.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional element selection — ifelse","title":"Conditional element selection — ifelse","text":"Selects elements either yes depending whether test TRUE FALSE.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/ifelse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional element selection — ifelse","text":"","code":"ifelse(test, yes, no, ...)  # S3 method for default ifelse(test, yes, no, ...)  # S3 method for tbl_ddf ifelse(test, yes, no, ...)  # S3 method for ddf_col ifelse(test, yes, no, ...)"},{"path":"https://uchidamizuki.github.io/dibble/reference/ifelse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional element selection — ifelse","text":"test object can coerced logical mode. yes Return values true elements test. Return values false elements test. ... Unused, extensibility.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/ifelse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional element selection — ifelse","text":"dibble test dibble. See base::ifelse() return value default method.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/ifelse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional element selection — ifelse","text":"ifelse() overrides base::ifelse() make generic. default method calls base version.","code":""},{"path":[]},{"path":"https://uchidamizuki.github.io/dibble/reference/is_dibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if the object is a dibble — is_dibble","title":"Test if the object is a dibble — is_dibble","text":"Test object dibble","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/is_dibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if the object is a dibble — is_dibble","text":"","code":"is_dibble(x)"},{"path":"https://uchidamizuki.github.io/dibble/reference/is_dibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if the object is a dibble — is_dibble","text":"x object.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/is_dibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if the object is a dibble — is_dibble","text":"logical.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/nrow-ncol.html","id":null,"dir":"Reference","previous_headings":"","what":"The number of rows/columns — nrow-ncol","title":"The number of rows/columns — nrow-ncol","text":"nrow() ncol() return number rows columns present x.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/nrow-ncol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The number of rows/columns — nrow-ncol","text":"","code":"nrow(x, ...)  # S3 method for default nrow(x, ...)  # S3 method for ddf_col nrow(x, ...)  # S3 method for tbl_ddf nrow(x, ...)  ncol(x, ...)  # S3 method for default ncol(x, ...)  # S3 method for ddf_col ncol(x, ...)  # S3 method for tbl_ddf ncol(x, ...)"},{"path":"https://uchidamizuki.github.io/dibble/reference/nrow-ncol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The number of rows/columns — nrow-ncol","text":"x object. ... arguments passed methods.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/nrow-ncol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The number of rows/columns — nrow-ncol","text":"integer NULL.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/nrow-ncol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The number of rows/columns — nrow-ncol","text":"functions override base functions make generic. default methods call base versions.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr filter","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/row-colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Row and column names — row-colnames","title":"Row and column names — row-colnames","text":"Retrieve set row column names matrix-like object.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/row-colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Row and column names — row-colnames","text":"","code":"rownames(x, ...)  # S3 method for default rownames(x, ...)  # S3 method for ddf_col rownames(x, ...)  # S3 method for tbl_ddf rownames(x, ...)  colnames(x, ...)  # S3 method for default colnames(x, ...)  # S3 method for ddf_col colnames(x, ...)  # S3 method for tbl_ddf colnames(x, ...)"},{"path":"https://uchidamizuki.github.io/dibble/reference/row-colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Row and column names — row-colnames","text":"x matrix-like object. ... arguments passed methods.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/row-colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Row and column names — row-colnames","text":"list row/column names.","code":""},{"path":"https://uchidamizuki.github.io/dibble/reference/row-colnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Row and column names — row-colnames","text":"functions override base functions make generic. default methods call base versions.","code":""},{"path":"https://uchidamizuki.github.io/dibble/news/index.html","id":"dibble-011","dir":"Changelog","previous_headings":"","what":"dibble 0.1.1","title":"dibble 0.1.1","text":"CRAN release: 2022-03-16 Support unary operation -. Add solve() methods. Fix diag() actions. Add list_sizes_unnamed() helper avoid retaining dim names (#4).","code":""},{"path":"https://uchidamizuki.github.io/dibble/news/index.html","id":"dibble-010","dir":"Changelog","previous_headings":"","what":"dibble 0.1.0","title":"dibble 0.1.0","text":"CRAN release: 2022-02-14 new release.","code":""}]
